package pages

var exps = []Experience{
	{
		Title: "Container as a Service DevOps Engineer",
		Description: `Rejoined the Container-as-a-Service team as a full-time employee after shortening my apprenticeship to 2.5 years. 
				Currently working as a DevOps Engineer at Deutsche Telekom IT GmbH, operating and kubernetes as a service platform and developing the accompanying ordering tool. 
				I was also involved in onboarding Google Cloud Platform in the company and am currently working on an infrastructure monitoring tool which will soon be open sourced`,
		From:    "Feb 2022",
		Company: "Deutsche Telekom IT GmbH",
	},
	{
		Title:       "Apprentice IT Specialist for System Integration",
		Description: `Engaged in a team managing and enhancing the internal workplace ordering system, akin to a webshop for employees to request necessary hardware and software. Focused on automating ordering workflows to streamline and reduce manual labor involved in the process.`,
		From:        "Feb 2021",
		Company:     "Deutsche Telekom Ausbildung",
	},
	{
		Title:       "Apprentice IT Specialist for System Integration",
		Description: `Contributed within the Container as a Service (CaaS) team, dedicated to an internal Kubernetes platform. Acquired comprehensive knowledge in programming, Kubernetes, and Docker, enriching my expertise in the domain.`,
		From:        "Sep 2019",
		Company:     "Deutsche Telekom Ausbildung",
	},
}

templ Index() {
	<main class="mx-5">
		<section class="h-screen flex justify-center items-center">
			<div>
				<div class="mb-10">
					<p class="text-xl font-mono mb-5">Hi there, I'm </p>
					<h2 class="text-5xl mb-4">
						<p class="inline-block text-transparent bg-clip-text bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 font-bold">Niklas Treml</p>
						<p class="text-gray-700 dark:text-gray-200 mb-4">I do Kubernetes and Programming</p>
					</h2>
					<p class="text-md dark:text-gray-200 md:w-1/2">
						I'm a DevOps Engineer at Deutsche Telekom IT operating and developing an internal kubernetes platform. 
					</p>
				</div>
				<div class="flex justify-center items-center">
					@TechImage("/static/images/linkedin.svg", "LinkedIn", "https://www.linkedin.com/in/niklas-treml/")
					<span class="dark:hidden inline">@TechImage("/static/images/github.svg", "GitHub", "https://github.com/NiklasTreml")</span>
					<span class="dark:inline hidden">@TechImage("/static/images/github white.svg", "GitHub", "https://github.com/NiklasTreml")</span>
				</div>
			</div>
		</section>
		<section class="flex items-center justify-center flex-col mx-5 sm:mx-16 md:mx-32">
			@Experiences(exps)
		</section>
		@Section() {
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<h2 class="text-3xl font-extrabold text-center mb-20">Here's some tech I like</h2>
				<div class="flex flex-wrap items-center justify-center space-x-4">
					@TechImage("/static/images/golang.svg", "Golang", "https://golang.org")
					@TechImage("/static/images/rust.svg", "Rust", "https://rust-lang.org")
					@TechImage("/static/images/typescript.svg", "Typescript", "https://typescriptlang.org")
					@TechImage("/static/images/kubernetes.svg", "Kubernetes", "https://kubernetes.io")
					@TechImage("/static/images/terraform.svg", "Terraform", "https://terraform.io")
					@TechImage("/static/images/react.svg", "React", "https://reactjs.org")
					@TechImage("/static/images/svelte.svg", "Svelte", "https://svelte.dev")
					@TechImage("/static/images/tailwind.svg", "Tailwind", "https://tailwindcss.com")
					@TechImage("/static/images/templ.svg", "templ", "https://templ.guide")
					@TechImage("/static/images/neovim.svg", "Neovim", "https://neovim.io")
				</div>
			</div>
		}
	</main>
}

templ Section() {
	<section class="h-screen flex items-center justify-center sm:flex-row flex-col">
		{ children... }
	</section>
}

templ TechImage(src, name, link string) {
	<a href={ templ.URL(link) } class="m-1 hover:scale-110 p-1 rounded transition-all">
		<img src={ src } alt={ name } class="h-16 w-16"/>
	</a>
}

templ Dot() {
	<div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
}

type Experience struct {
	Title       string
	Description string
	From        string
	Company     string
}

templ Experiences(exps []Experience) {
	<ol class="relative border-s border-gray-200 dark:border-gray-700">
		for i := 0; i < len(exps) - 1; i++ {
			<li class="mb-10 ms-4">
				@Dot()
				<time class="mb-1 text-sm leading-none text-gray-400 dark:text-gray-500">{ exps[i].From }</time>
				<h3 class="text-lg font-semibold text-gray-900 dark:text-white">{ exps[i].Title } <span class="text-sm text-gray-500"><br/>at { exps[i].Company }</span></h3>
				<p class="mb-4 text-base text-gray-500 dark:text-gray-400">{ exps[i].Description }</p>
			</li>
		}
		<li class="ms-4">
			@Dot()
			<time class="mb-1 text-sm leading-none text-gray-400 dark:text-gray-500">{ exps[len(exps) - 1].From }</time>
			<h3 class="text-lg font-semibold text-gray-900 dark:text-white">{ exps[len(exps) - 1].Title } <span class="text-sm text-gray-500"><br/>at { exps[len(exps) - 1].Company }</span></h3>
			<p class="text-base font-normal text-gray-500 dark:text-gray-400">{ exps[len(exps) - 1].Description }</p>
		</li>
	</ol>
}
